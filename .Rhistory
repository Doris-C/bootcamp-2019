prop.table(gapminder$continent)
prop.table(table(gapminder$continent))
typeof(gapminder$year)
gapminder07=data.frame(data=gapminder[,gapminder$year==2007])
gapminder07=gapminder[,gapminder$year==2007]
gapminder07=gapminder[gapminder$year==2007]
gapminder07=gapminder[gapminder$year==2007,]
sort(prop.table(table(gapminder07$continent)))
print(gapminder[gapminder$year==2007,population])
print(gapminder[gapminder$year==2007,gapminder$country=="Mexico"])
gapminder07$pop[gapminder07$country=="Mexico"]
sort(table(gapminder07$continent))
head(gapminder07[order(gapminder07$pop,decreasing = TRUE),])
gapminder$lifeExp_round=round(gapminder$lifeExp)
View(gapminder)
gapminder$lifeExp_round
gapminder07$lifeExp_over70 <- NA  # Initialize a variable containing all "NA" values
gapminder07$lifeExp_over70[gapminder07$lifeExp>70] <- "Yes"
gapminder07$lifeExp_over70[gapminder07$lifeExp<70] <- "No"
table(gapminder07$lifeExp_over70)
View(gapminder)
gapminder$lifeExp_highlow=NA
gapminder$lifeExp_round[gapminder$lifeExp>mean(gapminder$lifeExp)]="High"
gapminder$lifeExp_round[gapminder$lifeExp<mean(gapminder$lifeExp)]="Low"
table(gapminder$lifeExp_highlow)
View(gapminder)
gapminder07$lifeExp_over70 <- NA  # Initialize a variable containing all "NA" values
gapminder07$lifeExp_over70[gapminder07$lifeExp>70] <- "Yes"
gapminder07$lifeExp_over70[gapminder07$lifeExp<70] <- "No"
table(gapminder07$lifeExp_over70)
View(gapminder)
View(gapminder07)
View(gapminder)
gapminder07$lifeExp_highlow=NA
gapminder07$lifeExp_highlow=NA
gapminder07$lifeExp_highlow[gapminder07$lifeExp>mean(gapminder07$lifeExp)]="High"
gapminder07$lifeExp_highlow[gapminder07$lifeExp<mean(gapminder07$lifeExp)]="Low"
table(gapminder07$lifeExp_highlow)
gapminder$lifeExp_highlow=NULL
View(gapminder)
View(gapminder)
gapminder$lifeExp_round=round(gapminder$lifeExp)
View(gapminder)
aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean)
aggregate(gapminder07$lifeExp~gapminder07$continent,FUN=mean)
cor(gapminder07$lifeExp,gapminder07$gdpPercap)
t1=t.test(gapminder07$gdpPercap~gapminder07$lifeExp_highlow)
t1
reg1=lm(gapminder07$lifeExp~gapminder07$gdpPercap+gapminder07$pop)
reg1
summary(reg1)
write_csv(gapminder07,file="data/gapminder07.csv",row.names=FALSE)
write.csv(gapminder07,file="data/gapminder07.csv",row.names=FALSE)
hist(gapminder07$lifeExp)
?hist()
hist(gapminder07$lifeExp,main ="histogram of lifeExp",xlab = "lifeExp")
hist(gapminder07$lifeExp,main ="histogram of lifeExp",xlab = "lifeExp",xlim = (0,100))
hist(gapminder07$lifeExp,main ="histogram of lifeExp",xlab = "lifeExp",xlim = c(0,100))
hist(gapminder07$lifeExp,main ="histogram of lifeExp",xlab = "lifeExp",xlim = c(30,90))
hist(gapminder07$lifeExp,main ="histogram of lifeExp",xlab = "lifeExp",breaks = c(35,40,45,50,55,60,65,70,75,80,85),xlim = c(30,90))
hist(gapminder07$lifeExp,main ="histogram of lifeExp",xlab = "lifeExp",breaks = c(35,45,55,65,75,85),xlim = c(30,90))
plot(gapminder07$lifeExp~gapminder07$gdpPercap)
?plot()
plot(gapminder07$lifeExp~gapminder07$gdpPercap,main="scatterplot of lifeExp over gdpPercap")
plot(gapminder07$lifeExp~gapminder07$gdpPercap,main="scatterplot of lifeExp over gdpPercap",xlab="gdpPercap",ylab="lifeExp")
abline(mean(gapminder07$lifeExp))
?abline
abline(a=mean(gapminder07$lifeExp),b=0)
abline(h=mean(gapminder07$lifeExp))
install.packages("here")
#install.packages("here")
here::here()
#install.packages("here")
here::here("data","gapminder.csv")
str(gapminder)
gapminder=read.csv(head::head("data","gapminder5.csv"))
library(here)
gapminder=read.csv(here::here("data","gapminder5.csv"))
str(gapminder)
gapminder$country=as.character(gapminder$country)
gapminder$continent=as.character(gapminder$continent)
str(gapminder)
# create a vector of values that you want to repeat the function for
obs <- 1:nrow(gapminder)
# initialize the for loop with `for (i in vector)`
for (i in obs) { # the function to repeat is enclosed in braces {}
gapminder[i, "gdp"] <- gapminder[i, "pop"] * gapminder[i, "gdpPercap"]
}
obs = 1:nrow(gapminder)
for (i in obs) { # the function to repeat is enclosed in braces {}
gapminder[i, "gdp"] = gapminder[i, "pop"] * gapminder[i, "gdpPercap"]
}
for (i in obs) {
gapminder[i, "gdp"] = gapminder[i, "pop"] * gapminder[i, "gdpPercap"]
}
for (i in obs){
gapminder[i, "gdp"] = gapminder[i, "pop"] * gapminder[i, "gdpPercap"]
}
for(i in obs){
gapminder[i,"gap"]=gapminder[i,"pop"]*gapminder[i,"gdpPercap"]
}
View(gapminder)
for(i in obs){
gapminder[i,"log_gdpPercap"]=log(gapminder$gdpPercap)
gapminder[i,"log_pop"]=log(gapminder$pop)
}
for(i in obs){
gapminder[i,"log_gdpPercap"]=log(gapminder$gdpPercap[i])
gapminder[i,"log_pop"]=log(gapminder$pop[i])
}
gapminder$vec_log_gdpPercap = log(gapminder$gdpPercap)
all(gapminder$vec_log_gdpPercap == gapminder$log_gdpPercap)
years = unique(gapminder$year)
for (i in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$year == i],
na.rm = T)
print(paste0(i, ": ", mean_le))
}
continent=unique(gapminder$continent)
meanforcontinent=c()
for(i in continent){
mean_tem=mean(gapminder$lifeExp[gapminder$continent==i],na.rm=T)
print(paste0(i,": ",mean_tem))
}
aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean)
sort(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean))
sort(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean)$continent)
data=as.dateframe(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean))
data=as.date.frame(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean))
data=as.data.frame(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean))
sort(data$gapminder$continent)
sort(data$`gapminder$continent`)
sort(data$`gapminder$continent`)[1]
sort(data$`gapminder$continent`,decreasing = T)[1]
for (i in continent) {
print(paste0("Continent: ", i))
for (j in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", mean_le))
}
}
?aggregate
aggregate(gapminder$lifeExp~gapminder$continent+gapminder$year)
aggregate(gapminder$lifeExp~gapminder$continent+gapminder$year,FUN=mean)
View(data)
class(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean))
data=aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean)
View(data)
sort(aggregate(gapminder$lifeExp~gapminder$continent,FUN=mean))
for (i in conts) {
print(paste0("Continent: ", i))
for (j in years) {
sd_le <- sd(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", sd_le))
}
}
for (i in continent) {
print(paste0("Continent: ", i))
for (j in years) {
sd_le <- sd(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", sd_le))
}
}
aggregate(gapminder$lifeExp~gapminder$continent+gapminder$year,FUN=sd)
i=1987
while(i>=1987 && i <=2002) {
sd_le=sd(gapminder$lifeExp[gapminder$year==i])
print(paste0(i,": ",sd_le))
i=i+5
}
while(i <=2002) {
sd_le=sd(gapminder$lifeExp[gapminder$year==i])
print(paste0(i,": ",sd_le))
i=i+5
}
i=1987
while(i <=2002) {
sd_le=sd(gapminder$lifeExp[gapminder$year==i])
print(paste0(i,": ",sd_le))
i=i+5
}
for (i in years){
if(years>=1987){
tem=mean(gapminder$pop[gapminder$year==i])
print(paste0("mean population for year", i, " is ",tem ))
}
else{
print("sorry, year is less than 1987")
}
}
for (j in years){
if(years>=1987){
tem=mean(gapminder$pop[gapminder$year==j])
print(paste0("mean population for year", j, " is ",tem ))
}
else{
print("sorry, year is less than 1987")
}
}
for (j in years){
if(j>=1987){
tem=mean(gapminder$pop[gapminder$year==j])
print(paste0("mean population for year", j, " is ",tem ))
}
else{
print("sorry, year is less than 1987")
}
}
for (j in years){
if(j>=1987){
tem=mean(gapminder$pop[gapminder$year==j])
print(paste("mean population for year", j, " is ",tem ))
}
else{
print("sorry, year is less than 1987")
}
}
basicCal=function(data,var,continent){
meantem=mean(data$var[data$continent==continent])
mediantem=median(data$var[data$continent==continent])
maxtem=max(data$var[data$continent==continent])
mintem=min(data$var[data$continent==continent])
return(meantem,mediantem,maxtem,mintem)
}
basicCal(gapminder,lifeExp,continent)
basicCal=function(data,var,continent){
meantem=mean(data$var[data$continent==continent])
mediantem=median(data$var[data$continent==continent])
maxtem=max(data$var[data$continent==continent])
mintem=min(data$var[data$continent==continent])
print(meantem)
print(mediantem)
print(maxtem)
print(mintem)
}
basicCal(gapminder,lifeExp,continent)
basicCal(gapminder,lifeExp,"Asia")
basicCal(gapminder,"lifeExp","Asia")
print(mintem)
basicCal=function(data,var,Continent){
meantem=mean(data$var[data$continent==Continent])
mediantem=median(data$var[data$continent==Continent])
maxtem=max(data$var[data$continent==Continent])
mintem=min(data$var[data$continent==Continent])
print(meantem)
print(mediantem)
print(maxtem)
print(mintem)
}
basicCal(gapminder,"lifeExp","Asia")
gapminder[["lifeExp"]]
basicCal=function(data,var,continent){
temdata=data[,var][data$continent==continent]
print(mean(temdata))
print(median(temdata))
print(max(temdata))
print(min(temdata))
#meantem=mean(data$var[data$continent==continent])
#mediantem=median(data$var[data$continent==continent])
#maxtem=max(data$var[data$continent==continent])
# mintem=min(data$var[data$continent==continent])
#  print(meantem)
#  print(mediantem)
#  print(maxtem)
# print(mintem)
}
basicCal(gapminder,"lifeExp","Asia")
basicCal(gapminder,lifeExp,"Asia")
basicCal(gapminder,"lifeExp","Asia")
knitr::opts_chunk$set(echo = TRUE)
library(here)
gapminder=read.csv(here::here("data","gapminder5.csv"))
gapminder$country=as.character(gapminder$country)
gapminder$continent=as.character(gapminder$continent)
gapminder <- read.csv(here::here("data/gapminder5.csv"), stringsAsFactors=FALSE)
year<-2002
if(any(gapminder$year == year)){
print(paste("Record(s) for the year",year,"found."))
} else {
print(paste("No records for year",year))
}
popmean=mean(gapminder$pop)
for (i in unique(gapminder$country)){
if(mean(gapminder$pop[gapminder$country==i])<popmean){
print(paste("expectancy of country",i,"is",mean(gapminder$lifeExp[gapminder$country==i])))
}
}
overall_mean <- mean(gapminder$pop)
for (i in unique(gapminder$country)) {
country_mean <- mean(gapminder$pop[gapminder$country==i])
if (country_mean < overall_mean) {
mean_le <- mean(gapminder$lifeExp[gapminder$country==i])
print(paste("Mean Life Expectancy in", i, "is", mean_le))
}
} # end for loop
for (i in unique(gapminder$continent)){
temmean=mean(gapminder$lifeExp[gapminder$continent==i])
if(temmean>70){
print(paste("mean life expectancy of",i,"is greater than 70"))
}
else if(temmean>=50&&temmean<=70){
print(paste("mean life expectancy of",i,"less than 70 and greater than 50"))
}
else{
print(paste("mean life expectancy of",i,"is less than 50"))
}
}
lower_threshold <- 50
upper_threshold <- 70
for (i in unique(gapminder$continent)){
tmp <- mean(gapminder$lifeExp[gapminder$continent==i])
if (tmp < lower_threshold){
print(paste("Average Life Expectancy in", i, "is less than", lower_threshold))
}
else if (tmp > lower_threshold & tmp < upper_threshold){
print(paste("Average Life Expectancy in", i, "is between", lower_threshold, "and", upper_threshold))
}
else {
print(paste("Average Life Expectancy in", i, "is greater than", upper_threshold))
}
}
data_frame_info <- function(df) {
cols <- names(df)
for (i in cols) {
print(paste0(i, ": ", mode(df[, i])))
}
}
data_frame_info(gapminder)
vector_info <- function(x, include_median=FALSE) {
print(paste("Mean:", mean(x)))
print(paste("Standard Deviation:", sd(x)))
if (include_median) {
print(paste("Median:", median(x)))
}
}
le <- gapminder$lifeExp
vector_info(le, include_median = F)
vector_info(le, include_median = T)
generation=read.csv("data/ca_energy_generation")
generation=read.csv(here::here("data/ca_energy_generation.csv"),stringsAsFactors = F)
imports=read.csv(here::here("data/ca_energy_imports.csv"),stringsAsFactors = F)
str(generation)
install.packages("lubridate")
library(lubridate)
generation$datetime=as_datetime(generation$datetime)
imports$datetime=as_datetime(imports$datetime)
head(imports)
str(imports)
str(generation)
long_gen=melt(generation,id.vars="datetime",variable.name="source",value.name = "usage")
library(reshape2)
long_gen=melt(generation,id.vars="datetime",variable.name="source",
value.name = "usage")
View(long_gen)
View(generation)
head(long_gen)
View(generation)
View(imports)
merged_energy=merge(generation,imports,by="datetime")
dim(merged_energy)
View(merged_energy)
long_merged_energy=melt(merged_energy,id.vars="datetime",variable.name = "source",
value.name = "usage")
View(long_merged_energy)
library(dplyr)
library(data.table)
library(tidyverse)
select(generation,c(1,2,3,))
select(generation,c(1,2,3))
select(generation,"datetime")
select(generation,datetime:biomass)
select(generation,datetime)
?select
select(merged_energy,contains("hydro"))
mutate(merged_energy,total_hydro=large_hydro+small_hydro)
merged_energy%>%select(merged_energy,contains("hydro"))%>%
mutate(total_hydro=large_hydro+small_hydro)%>%
summarize(mean_hydro=mean(total_hydro,na.rm=T))
merged_energy%>%
select(contains("hydro"))%>%
mutate(total_hydro=large_hydro+small_hydro)%>%
summarize(mean_hydro=mean(total_hydro,na.rm=T))
long_merged_energy%>%
group_by(source)%>%
summarize(mean_usage=mean(usage,na.rm=T))
merged_energy%>%
select(small_hydro,large_hydro,biogas,biomass)%>%
summarize(meansamllh=mean(small_hydro),meanlargeh=mean(large_hydro),
meanbiogas=mean(biogas),meanbiomass=mean(biomass))
merged_energy%>%
summarize(meansamllh=mean(small_hydro),meanlargeh=mean(large_hydro),
meanbiogas=mean(biogas),meanbiomass=mean(biomass))
long_merged_energy%>%
select(datetime, contains("hydro"), contains("bio"))%>%
group_by(source)%>%
summarize(mean_usage=mean(usage,na.rm=T))
library(data.table)
data_file=here::here("data","ca_energy_generation.csv")
data_file=here::here("data","ca_energy_generation.csv")
generation_df=read.csv(data_file,stringsAsFactors = F)
generation_dt=fread(data_file)
view(generation_df)
view(generation_dt)
generation_df
generation_dt
str(generation_df)
str(generation_dt)
generation_dt[wind>4400&mday(datetime)==7]
generation_dt[natural_gas<=5000&large_hydro>2000]
generation_dt[coal>10&solar>median(solar)]
generation_dt[,newcol := 3*wind + solar*biogas/2]
View(generation_dt)
generation_dt[,.(newcol = 3*wind + solar*biogas/2)]
generation_dt[,total_hydro=small_hydro+large_hydro]
generation_dt[,total_hydro:=small_hydro+large_hydro]
generation_dt[,mean(nuclear,biogas)]
generation_dt[,.(nuclear_m=mean(nuclear),biogas_m=mean(biogas))]
generation_dt[solar==0,.(datetime,total_thermal=natural_gas+coal)]
generation_dt[,median_solargeneration=median(solar),by=hour(datetime)]
generation_dt[,.(median_solargeneration=median(solar)),by=hour(datetime)]
generation_dt[solar>0,.(maxgasgeneration=max(natural_gas)),by=day(datetime)]
?as_date
View(generation_dt)
class(generation_dt$datetime)
all_generation_long[,.N]
datapath=here::here("data","ca_energy_generation.csv")
ca_generation=read.csv(datapath,stringsAsFactors = F)
datapath=here::here("data","ca_energy_imports.csv")
datapath=here::here("data","ca_energy_generation.csv")
ca_generation=read.csv(datapath,stringsAsFactors = F)
datapath=here::here("data","ca_energy_imports.csv")
ca_imports=read.csv(datapath,stringsAsFactors = F)
datapath=here::here("data","ca_energy_generation.csv")
ca_generation=read.csv(datapath,stringsAsFactors = F)
datapath=here::here("data","ca_energy_imports.csv")
ca_imports=read.csv(datapath,stringsAsFactors = F)
ca_generation$datetime=as_datetime(ca_generation$datetime)
ca_imports$datetime=as_datetime(ca_imports$datetime)
class(ca_generation$datetime)
ca_merged=merge(ca_generation,ca_imports,by="datetime")
ca_merged_long=melt(ca_merged,id.vars="datetime",variable.name="sources",value.name="usage")
View(ca_merged_long)
mutate(ca_merged_long,day=as_date(datetime))
View(ca_merged_long)
View(ca_merged_long)
ca_merged_long=mutate(ca_merged_long,day=as_date(datetime))
View(ca_merged_long)
ca_merged_long=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
summarize(total_usage=sum(usage,na.rm=T))%>%
ungroup()%>%
mutate(per_usage=usage/total_usage)
ca_merged_long
ca_merged_long=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
summarize(total_usage=sum(usage,na.rm=T))%>%
ungroup()#%>%
# mutate(per_usage=usage/total_usage)
ca_merged_long1=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
summarize(total_usage=sum(usage,na.rm=T))%>%
ungroup()#%>%
ca_merged=merge(ca_generation,ca_imports,by="datetime")
ca_merged_long=melt(ca_merged,id.vars="datetime",variable.name="sources",value.name="usage")
ca_merged_long1=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
summarize(total_usage=sum(usage,na.rm=T))%>%
ungroup()#%>%
#mutate(per_usage=usage/total_usage)
ca_merged_long1=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
summarize(total_usage=sum(usage,na.rm=T))%>%
ungroup()#%>%
#mutate(per_usage=usage/total_usage)
ca_merged_long1
ca_merged_long1=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
mutate(total_usage=sum(usage,na.rm=T))%>%
ungroup()#%>%
# mutate(per_usage=usage/total_usage)
ca_merged_long1
ca_merged_long1=ca_merged_long%>%
mutate(day=as_date(datetime),log_usage=log(usage))%>%
group_by(day)%>%
mutate(total_usage=sum(usage,na.rm=T))%>%
ungroup()%>%
mutate(per_usage=usage/total_usage)
ca_merged_long1%>%
group_by(source)%>%
summarize(hourlyusage=mean(usage,na.rm=T))%>%
arrange(hourlyusage)
View(ca_merged_long1)
ca_merged_long1%>%
group_by(sources)%>%
summarize(hourlyusage=mean(usage,na.rm=T))%>%
arrange(hourlyusage)
ca_merged_long1%>%
group_by(sources)%>%
summarize(hourlyusage=mean(usage,na.rm=T))%>%
arrange(desc(hourlyusage))
